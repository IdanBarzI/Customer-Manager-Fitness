<Application x:Class="CustomerManager_1.App" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:CustomerManager_1" StartupUri="MainWindow.xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" d1p1:Ignorable="d" xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:converters="clr-namespace:CustomerManager_1.Converters">
    <Application.Resources>
        <ResourceDictionary>


            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.Purple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Blue.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <vm:ViewModelLocator x:Key="Locator" d:IsDataSource="True" xmlns:vm="clr-namespace:CustomerManager_1.ViewModel" />

            <converters:ToDoubleConverter x:Key="ToDoubleConverter"/>
            <converters:PhoneConverter x:Key="PhoneConverter"/>
            <converters:EnumToCollectionConverter x:Key="EnumToCollectionConverter"/>

            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
            <SolidColorBrush x:Key="DataGrid.Hover.Foreground" Color="#f57c00"/>
            <SolidColorBrush x:Key="DataGrid.IsSelected.BackGround" Color="#ffb74d"/>
            <SolidColorBrush x:Key="ListView.Hover.BackGround" Color="#e0e0e0"/>
            <SolidColorBrush x:Key="ListView.IsSelected.BackGround" Color="#aeaeae"/>
            <SolidColorBrush x:Key="NutritionsGrid.Background" Color="Purple"/>
            <SolidColorBrush x:Key="Remove.Background" Color="#C70000"/>

            <FontFamily x:Key="ListView.FontFamily" x:Uid="Book Antiqua"/>

            <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="30" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Opacity" Value="0.8"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="#F1CA68"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="#F1CA68"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--NavBar-->

            <Style x:Key="font_style" TargetType="TextBlock">
                <Setter Property="VerticalAlignment"
                    Value="Center"/>

                <Setter Property="HorizontalAlignment"
                    Value="Left"/>


                <Setter Property="Foreground"
                    Value="#e0e0e0"/>
                <Setter Property="FontSize"
                    Value="20"/>
            </Style>
            
            <Style x:Key="tb_Style" TargetType="{x:Type ToggleButton}">
                <Setter Property="Template">

                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="border"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True">

                            </Border>

                        </ControlTemplate>
                    </Setter.Value>

                </Setter>
            </Style>
            
            <Style TargetType="ToolTip" x:Key="tt_NewCustomer">
                <Setter Property="Placement" Value="Right"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Width" Value="120"/>
                <Setter Property="Margin" Value="20,0,0,0"/>
                <Setter Property="Background" Value="#4A5668"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="PlacementRectangle" Value="60,0,0,0"/>
                <Setter Property="HorizontalOffset" Value="15"/>
                <Setter Property="VerticalOffset" Value="6"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
            </Style>

            <!--Customers-->
            <Style TargetType="ListView" x:Key="CustomersListView">
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="MaxHeight" Value="115" />
                <Setter Property="Height" Value="auto" />
                <Setter Property="Width" Value="400" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="FontSize" Value="13.333"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="Border"
                            Padding="20"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource MaterialDesignDivider}"
                            BorderThickness="0,0,0,1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border CornerRadius="0, 0, 5, 5" BorderThickness="1" BorderBrush="Purple">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Customer-->

            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignTextBox}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Margin" Value="0,0,0,45" />
            </Style>

            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignComboBox}" x:Key="Gender">
                <Setter Property="Margin" Value="0,0,0,20"/>
                <Setter Property="FontSize" Value="18" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ComboBoxItem">
                            <Setter Property="Cursor" Value="Hand" />
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>


                <!--Menu-->
            
            <Style TargetType="ListView" x:Key="gc_Style">
                <Setter Property="Background" Value="#f3e5f5"/>
                <Setter Property="BorderBrush" Value="#1565c0"/>
            </Style>

            <Style TargetType="ListView" x:Key="AutoCompleteListView">
                <Setter Property="FlowDirection" Value="RightToLeft" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="MaxHeight" Value="115" />
                <Setter Property="Height" Value="auto" />
                <Setter Property="Width" Value="400" />
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="FontSize" Value="13.333"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListViewItem">
                            <Setter Property="SnapsToDevicePixels" Value="True" />
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush" Value="Transparent" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ListBoxItem">
                                        <Border x:Name="Border"
                            Padding="20"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource MaterialDesignDivider}"
                            BorderThickness="0,0,0,1"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value=".56" />
                                </Trigger>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListView">
                            <Border CornerRadius="0, 0, 5, 5" BorderThickness="1" BorderBrush="Purple">
                                <ScrollViewer>
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="DataGrid" x:Key="FoodsGrid">
                <Setter Property="FlowDirection" Value="RightToLeft" />
                <Setter Property="CanUserReorderColumns" Value="True" />
                <Setter Property="BorderBrush" Value="#DDDDDD" />
                <Setter Property="HorizontalGridLinesBrush" Value="#DDDDDD" />
                <Setter Property="VerticalGridLinesBrush" Value="#DDDDDD" />
                <Setter Property="FontWeight" Value="SemiBold"/>

                <Setter Property="RowStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridRow">
                            <Style.Triggers>
                                <!-- Highlight a grid row as the mouse passes over -->
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Opacity" Value="0.8" />
                                    <Setter Property="Cursor" Value="Hand" />
                                    <Setter Property="TextBlock.Foreground" Value="{StaticResource DataGrid.Hover.Foreground}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="CellStyle">
                    <Setter.Value>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <!-- Highlight selected rows -->
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{StaticResource DataGrid.IsSelected.BackGround}" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="{StaticResource DataGrid.IsSelected.BackGround}" />
                                    <Setter Property="BorderBrush" Value="Black" />
                                    <Setter Property="BorderThickness" Value="1"/>
                                    <Setter Property="Foreground" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                            <!-- Add some padding around the contents of a cell -->
                            <Setter Property="Padding" Value="4,3,4,3" />
                            <Setter Property="TextBlock.TextAlignment" Value="Center" />
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="DataGridCell">
                                        <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                            <ContentPresenter />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style TargetType="Control">
                                        <Setter Property="BorderBrush" Value="Transparent" />
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Grid" x:Key="NutritionsGrid">
                <Setter Property="FlowDirection" Value="RightToLeft" />
                <Setter Property="TextBlock.FontSize" Value="28"/>
                <Setter Property="TextBlock.FontSize" Value="28"/>
            </Style>

            <Style TargetType="StackPanel" x:Key="NutritionsStackPanel">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="Orientation" Value="Horizontal" />
            </Style>

            <Style TargetType="TextBlock" x:Key="NutritionsValueTextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>

            <Style TargetType="TextBlock" x:Key="NutritionsNameTextBlock">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Foreground" Value="{StaticResource DataGrid.Hover.Foreground}" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>